/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oopassignment.sales_manager;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wongw
 */
public class DeleteSalesEntry extends javax.swing.JFrame {

    /**
     * Creates new form DeleteSalesEntry
     */
    public DeleteSalesEntry() {
        initComponents();
        populateSalesIDBox();
        loadSalesTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        salesIDBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        backToMenuBtn = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Delete Sales Entry");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Sales ID :");

        salesIDBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ID", "Item 1", "Item 2", "Item 3", "Item 4" }));
        salesIDBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesIDBoxActionPerformed(evt);
            }
        });

        salesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Sales ID", "Sales Date", "Quantity Sold", "Amount", "Sales Manager ID", "Item ID"
            }
        ));
        jScrollPane2.setViewportView(salesTable);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        backToMenuBtn.setText("Back");
        backToMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMenuBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(jLabel7)
                        .addGap(31, 31, 31)
                        .addComponent(salesIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(backToMenuBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(backToMenuBtn))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(salesIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(deleteButton))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void populateSalesIDBox() {
        String filePath = "src/database/Sales.txt";
        CrudHelper helper = new CrudHelper();

        try {
            List<String> lines = helper.readFile(filePath);
            if (lines.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Sales file is empty!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            salesIDBox.removeAllItems(); // Clear existing items

            for (String line : lines) {
                String[] data = line.split(",");
                if (data.length >= 1) { // Ensure there's at least one column
                    salesIDBox.addItem(data[0]); // Add SalesID
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error loading Sales IDs: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    
    private void loadSalesTable() {
        String salesFilePath = "src/database/Sales.txt";

        DefaultTableModel model = (DefaultTableModel) salesTable.getModel();
        model.setRowCount(0); // Clear existing rows

        try (BufferedReader reader = new BufferedReader(new FileReader(salesFilePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length == 6) { // Assuming 6 columns in Sales.txt
                    model.addRow(data);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error loading sales data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

        // Reset all text fields to blank
        salesIDBox.setSelectedIndex(-1);
        
        // Optionally, reset other UI components if necessary
        JOptionPane.showMessageDialog(null, "All fields have been reset.", "Reset", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void salesIDBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesIDBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salesIDBoxActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String salesFilePath = "src/database/Sales.txt";
        String inventoryFilePath = "src/database/Inventory.txt";
        String selectedSalesID = (String) salesIDBox.getSelectedItem();

        if (selectedSalesID == null || selectedSalesID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a Sales ID to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            CrudHelper helper = new CrudHelper();

            // Load sales and inventory data
            List<SalesEntry> salesList = helper.loadSales(salesFilePath);
            List<Item> inventoryList = helper.loadInventory(inventoryFilePath);

            // Find the sales entry to delete
            SalesEntry saleToDelete = null;
            for (SalesEntry sale : salesList) {
                if (sale.getSalesID().equals(selectedSalesID)) {
                    saleToDelete = sale;
                    break;
                }
            }

            if (saleToDelete == null) {
                JOptionPane.showMessageDialog(null, "Sales entry not found.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Adjust the inventory stock level
            for (Item item : inventoryList) {
                if (item.getItemID().equals(saleToDelete.getItemID())) {
                    int updatedStock = item.getStockLevel() + saleToDelete.getQuantitySold();
                    item.setStockLevel(updatedStock);
                    break;
                }
            }

            // Delete the sales entry
            salesList = helper.deleteFromList(salesList, selectedSalesID, "Sales");

            // Update files
            helper.updateFile(salesFilePath, salesList); // Update Sales.txt
            helper.updateFile(inventoryFilePath, inventoryList); // Update Inventory.txt

            JOptionPane.showMessageDialog(null, "Sales entry deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

            // Reload the table to reflect changes
            populateSalesIDBox();
            loadSalesTable();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error deleting sales entry: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void backToMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMenuBtnActionPerformed
        SalesEntryChoice choiceFrame = new SalesEntryChoice();

        choiceFrame.setVisible(true);

        this.dispose(); 
    }//GEN-LAST:event_backToMenuBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteSalesEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteSalesEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteSalesEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteSalesEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteSalesEntry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToMenuBtn;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> salesIDBox;
    private javax.swing.JTable salesTable;
    // End of variables declaration//GEN-END:variables
}
